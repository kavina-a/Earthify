import { apiSlice  } from "./apiSlice";
import { USERS_URL } from "../constants";

//this is what rtk does
export const userApiSlice = apiSlice.injectEndpoints({
    endpoints: (builder) => ({
        login: builder.mutation({
            //the query that we can send to the backend
            query: (data) => ({
                url: `${USERS_URL}/auth`, //this is the url that the request is going to
                method: 'POST',
                body: data,
            })
        }), 
        logout: builder.mutation({
            query: () => ({
                url: `${USERS_URL}/logout`,
                method: 'POST'
            })
        }),
        registerCustomer: builder.mutation({
            query: (data) => ({
                url: `${USERS_URL}/create/customer`,
                method: 'POST',
                body: data
            })
        }), 
        registerServiceProvider: builder.mutation({
            query: (data) => ({
                url: `${USERS_URL}/create/service-provider`,
                method: 'POST',
                body: data
            })
        }),
        profile: builder.mutation({
            query: (data) => ({
                url: `${USERS_URL}/profile`,
                method: 'PUT',
                body: data
            })
        }),
        currentProfile: builder.query({
            query: () => ({
                url: `${USERS_URL}/current/profile`,
                method: 'GET',
            })
        }),
        ecoPoints: builder.query({
            query: () => ({
                url: `${USERS_URL}/eco-points`,
                method: 'GET',
                credentials: 'include',
            })
        })
})
})

//how does useloginmutation come ?
// *`use${endpointName}Mutation` is a hook that is generated by the `createApi` function. it depends on either mutation or query.

export const { useLoginMutation, useLogoutMutation, useRegisterCustomerMutation, useRegisterServiceProviderMutation, useProfileMutation, useEcoPointsQuery, useCurrentProfileQuery} = userApiSlice;